install.packages("stringr")
library(stringr)
search()
fruits
str_detect(fruits, 'A')
str_count(fruits,)
fruits
str_count(fruits,)
fruits
install.packages(googleVis)
install.packages("googleVis")
library(googleVis)
fruits
fruits
Fruits
fruits
install.packages("stringr")
install.packages("stringr")
library(stringr)
force(str_subset)
str_detect(fruits, regex('a', ignore_case = T))
View(regex)
View(str_detect)
View(str_detect)
str_detect(fruits, regex('a', ignore_case = T))
str_replace('apple', 'p', '*')
str_replace('apple', 'p', '*')
str_replace('apple', 'p', '**')
str_replace('apple', 'p', '**')
str_replace('apple', 'p', '*')
str_replace('apple', 'p', '**')
str_replace('apple', 'p', '**')
str_replace_all('apple', 'p', '*')
str_replace_all('apple', 'p', '*')
str_replace('apple', 'p', '*') #apple
fruits <- str_c('apple', '/', 'orange', '/', 'banana')
fruits
str_split(fruits, "/")
str_split(fruits, "/") #split 결과는 리스트로 만들어져서 저장이 된다 -> ex) [[1]]
str_split(fruits, "/")
fruits
str_sub(fruits, start=1, end=3)
str_sub(fruits, start=6, end=9)
str_sub(fruits, start=6)
str_sub(fruits, start=6, end=9)
str_sub(fruits, start=6)
str_sub(fruits, end=9)
str_sub(fruits, end=9)
str_sub(fruits, end=9)
str_trim("  apple banana berry  ")
str_trim("\t  apple banana berry  ")
str_trim("\t     apple banana berry  ")
str_trim("\t     apple banana berry    \n")
str_trim("   apple banana berry    \n")
