radarchart(data2,axistype=2,pcol=topo.colors(3),plty=1,title="두번째 타입")
radarchart(data2,axistype=3,pty=32,plty=1,axislabcol="grey",na.itp=FALSE,
title="세번째 타입)")
radarchart(data2,axistype=0,plwd=1:5,pcol=1,title="네번째 타입")
par(mfrow=c(1,1))
plot(1:15)
abline(h=8)  # 선 긋기
rect(1,6,3,8)  # 사각형 그리기
arrows(1,1,5,5) # 화살표 그리기
text(8,9,"TEXT")  # 글자 쓰기
title("THIS IS TEST","SUB")
library(ggplot2)
korean <- read.table("data/학생별국어성적_new.txt",header=T,sep=",")
korean
ggplot(korean,aes(x=이름,y=점수)) + geom_point()
ggplot(korean,aes(x=이름,y=점수)) +
geom_bar(stat="identity",fill="green", colour="red") +
theme(axis.text.x=element_text(angle=45,hjust=1,vjust=1, color="blue",size=8))
score_kem <- read.csv("data/학생별과목별성적_국영수_new.csv",header=T)
score_kem
library(plyr)
sort_kem <- arrange(score_kem,이름,과목)
sort_kem3
sort_kem2 <- ddply(sort_kem,"이름",transform,누적합계=cumsum(점수))
sort_kem3 <- ddply(sort_kem2,"이름",transform,누적합계=cumsum(점수),
label=cumsum(점수)-0.5*점수)
ggplot(sort_kem3,aes(x=이름,y=점수,fill=과목)) +
geom_bar(stat="identity") +
geom_text(aes(y=label,label=paste(점수,'점')),colour="black",size=4) +
guides(fill=guide_legend(reverse=T)) +
theme(axis.text.x=element_text(angle=45,hjust=1,vjust=1,
colour="black", size=8))
score <- read.table("data/학생별전체성적_new.txt",header=T,sep=",")
ggplot(score,aes(x=영어,y=reorder(이름,영어))) +
geom_point(size=6) +
theme_bw( ) +
theme(panel.grid.major.x=element_blank( ) ,
panel.grid.minor.x=element_blank( ) ,
panel.grid.major.y=element_line(color="red",linetype="dashed"))
ggplot(score,aes(x=영어,y=reorder(이름,영어))) +
geom_segment(aes(yend=이름),xend=0,color="blue") +
geom_point(size=6,color="green") +
theme_bw() +
theme(panel.grid.major.y=element_blank())
install.packages("gridExtra")
library(gridExtra)
v_mt <- mtcars
graph1 <- ggplot(v_mt,aes(x=hp , y=mpg))
graph1 + geom_point()
png(filename = "graph/graph1.png", width = 480, height = 480)
graph1 + geom_point()
dev.off()
graph2 <- graph1 + geom_point(colour="blue")
png(filename = "graph/graph2.png", width = 480, height = 480)
graph2
graph3 <- graph2 + geom_point(aes(color=factor(am)))
png(filename = "graph/graph3.png", width = 480, height = 480)
graph3
g <- read.csv("d:/workspace/r_data_analysis/part4/data/군집분석.csv",head=T)
g <- read.csv("d:/workspace/r_data_analysis/part4/data/군집분석.csv",head=T)
str(g)
graph <- data.frame(학생=g$학생,교수=g$교수)
g<-graph.data.frame(graph,directed=T)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,edge.arrow.size=0.5,
vertex.color="green",vertex.label=NA)
plot(g,layout=layout.kamada.kawai,vertex.size=2,edge.arrow.size=0.5,
vertex.label=NA)
V(g)$name
gubun1 <- V(g)$name
gubun1
library(stringr)
g<-graph.data.frame(graph,directed=T)
g <- read.csv("d:/workspace/r_data_analysis/part4/data/군집분석.csv",head=T)
graph <- data.frame(학생=g$학생,교수=g$교수)
g<-graph.data.frame(graph,directed=T)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,edge.arrow.size=0.5,
vertex.color="green",vertex.label=NA)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,edge.arrow.size=0.5,
vertex.color="green",vertex.label=NA)
plot(g,layout=layout.kamada.kawai,vertex.size=2,edge.arrow.size=0.5,
vertex.label=NA)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,
edge.arrow.size=0.5, vertex.color="green",vertex.label=NA)
g <- read.csv("d:/workspace/r_data_analysis/part4/data/군집분석.csv",head=T)
graph1 <- data.frame(학생=g$학생,교수=g$교수)
g<-graph.data.frame(graph1,directed=T)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,
edge.arrow.size=0.5, vertex.color="green",vertex.label=NA)
library(RCurl)
g <- read.csv("d:/workspace/r_data_analysis/part4/data/군집분석.csv",head=T)
graph1 <- data.frame(학생=g$학생,교수=g$교수)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,
edge.arrow.size=0.5, vertex.color="green",vertex.label=NA)
# 관계도
install.packages("igraph")
install.packages("igraph")
g3 <- graph.data.frame(emp,directed=F)
g1 <- graph(c(1,2, 2,3, 2,4, 1,4, 5,5, 3,6))
plot(g1)
library(igraph)
g1 <- graph(c(1,2, 2,3, 2,4, 1,4, 5,5, 3,6))
plot(g1)
str(g1)
name <- c('서진수 대표이사', '일지매 부장', '김유신 과장', '손흥민 대리', '노정호 대리',
'이순신 부장', '유관순 과장', '신사임당 대리', '강감찬 부장', '광개토 과장', '정몽주 대리')
pemp <- c('서진수 대표이사', '서진수 대표이사', '일지매 부장', '김유신 과장', '김유신 과장',
'서진수 대표이사', '이순신 부장', '유관순 과장', '서진수 대표이사',
'강감찬 부장', '광개토 과장')
emp <- data.frame(이름=name, 상사이름=pemp)
emp
g <- graph.data.frame(emp,directed=T)
plot(g,layout=layout.fruchterman.reingold,vertex.size=8,edge.arrow.size=0.5)  #1. 그림 읽고,
png("graph/network_2.png", width=600, height=600) #1.1 그림파일 저장하는 법
plot(g,layout=layout.fruchterman.reingold,vertex.size=8,edge.arrow.size=0.5)  #2. 그림 읽고,
dev.off() #2.1 그림 저장하는 법
g3 <- graph.data.frame(emp,directed=F)
plot(g3,layout=layout.fruchterman.reingold,vertex.size=8,
edge.arrow.size=0.5, vertex.label=NA) #화살표와 이름이 안나오게 하는 경우
png("graph/network_3.png", width=600, height=600)
plot(g3,layout=layout.fruchterman.reingold,vertex.size=8,
edge.arrow.size=0.5, vertex.label=NA)
plot(g3,layout=layout.random,vertex.size=8, #layout 옵션을 random으로 넣으면 실행할때마다 layout이 바뀐다.
edge.arrow.size=0.5, vertex.label=NA)
plot(g3,layout=layout.random,vertex.size=8, #layout 옵션을 random으로 넣으면 실행할때마다 layout이 바뀐다.
edge.arrow.size=0.5, vertex.label=NA)
plot(g3,layout=layout.random,vertex.size=8, #layout 옵션을 random으로 넣으면 실행할때마다 layout이 바뀐다.
edge.arrow.size=0.5, vertex.label=NA)
plot(g3,layout=layout.random,vertex.size=8, #layout 옵션을 random으로 넣으면 실행할때마다 layout이 바뀐다.
edge.arrow.size=0.5, vertex.label=NA)
plot(g3,layout=layout.random,vertex.size=8, #layout 옵션을 random으로 넣으면 실행할때마다 layout이 바뀐다.
edge.arrow.size=0.5, vertex.label=NA)
plot(g3,layout=layout.random,vertex.size=8, #layout 옵션을 random으로 넣으면 실행할때마다 layout이 바뀐다.
edge.arrow.size=0.5, vertex.label=NA)
g <- read.csv("d:/workspace/r_data_analysis/part4/data/군집분석.csv",head=T)
graph1 <- data.frame(학생=g$학생,교수=g$교수)
g<-graph.data.frame(graph1,directed=T)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,
edge.arrow.size=0.5, vertex.color="green",vertex.label=NA)
plot(g,layout=layout.fruchterman.reingold,vertex.size=2,
edge.arrow.size=0.5, vertex.color="green",vertex.label=NA)
#모양 바꾸어서 출력하기
plot(g,layout=layout.kamada.kawai,vertex.size=2,
edge.arrow.size=0.5,vertex.label=NA)
V(g)$name
gubun1 <- V(g)$name
gubun1
library(stringr)
gubun <- str_sub(gubun1,start=1,end=1)
gubun
colors <- c()
sizes <- c()
for ( i in 1:length(gubun)) {
if (gubun[i] == 'S' ) {
colors <- c(colors,"red")
sizes <- c(sizes,2)
} else {
colors <- c(colors,"green")
sizes <- c(sizes,6)
}
}
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,
vertex.color=colors)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,
vertex.color=colors,vertex.label=NA)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0,
vertex.color=colors,vertex.label=NA)
plot(g,layout=layout.kamada.kawai,vertex.size=sizes,edge.arrow.size=0,
vertex.color=colors,vertex.label=NA)
for ( i in 1:length(gubun)) {
if (gubun[i] == 'S' ) {
shapes <- c(shapes,"circle") }
else {
shapes <- c(shapes,"square") }
}
plot(g,layout=layout.kamada.kawai,vertex.size=sizes,edge.arrow.size=0,
vertex.color=colors,vertex.label=NA,vertex.shape=shapes)
savePlot("colorcontrol_5.png",type="png")
virus1 <- read.csv("d:/workspace/r_data_analysis/part4/data/메르스전염현황.csv",header=T)
virus1 <- read.csv("d:/workspace/r_data_analysis/part4/data/메르스전염현황.csv",header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="c:\\temp\\mers.html")
gubun <- str_sub(gubun1,start=1,end=1)
gubun
colors <- c()
sizes <- c()
for ( i in 1:length(gubun)) {
if (gubun[i] == 'S' ) {
colors <- c(colors,"red")
sizes <- c(sizes,2)
} else {
colors <- c(colors,"green")
sizes <- c(sizes,6)
}
}
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,
vertex.color=colors)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,
vertex.color=colors,vertex.label=NA)
install.packages("RCurl")
library(igraph)
library(devtools)
library(RCurl)
library(d3Network)
library(stringr)
gubun <- str_sub(gubun1,start=1,end=1)
gubun
colors <- c()
sizes <- c()
for ( i in 1:length(gubun)) {
if (gubun[i] == 'S' ) {
colors <- c(colors,"red")
sizes <- c(sizes,2)
} else {
colors <- c(colors,"green")
sizes <- c(sizes,6)
}
}
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,
vertex.color=colors)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,
vertex.color=colors,vertex.label=NA)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0,
vertex.color=colors,vertex.label=NA)
plot(g,layout=layout.kamada.kawai,vertex.size=sizes,edge.arrow.size=0,
vertex.color=colors,vertex.label=NA)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0,
vertex.color=colors,vertex.label=NA)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0.5,
vertex.color=colors,vertex.label=NA)
plot(g,layout=layout.fruchterman.reingold,vertex.size=sizes,edge.arrow.size=0,
vertex.color=colors,vertex.label=NA)
shapes <- c()
for ( i in 1:length(gubun)) {
if (gubun[i] == 'S' ) {
shapes <- c(shapes,"circle") }
else {
shapes <- c(shapes,"square") }
}
plot(g,layout=layout.kamada.kawai,vertex.size=sizes,edge.arrow.size=0,
vertex.color=colors,vertex.label=NA,vertex.shape=shapes)
virus1 <- read.csv("d:/workspace/r_data_analysis/part4/data/메르스전염현황.csv",header=T)
d3SimpleNetwork(virus1,width=600,height=600,file="graph/mers.html")
d3SimpleNetwork(virus1,width=1200,height=900,file="graph/mers.html")
# Treemap
install.packages('treemap')
library(treemap)
getwd()
total <- read.csv("data/학생시험결과_전체점수.csv",header=T,sep=",")
total
treemap(total,vSize="점수",index=c("점수","이름"))
treemap(total,vSize="점수",index=c("점수","조","이름")) #점수, 조, 이름름
treemap(total,vSize="점수",index=c("점수","조","이름")) #점수, 조, 이름
total <- read.table("data/학생별전체성적_new.txt",header=T,sep=",")
total
row.names(total)<- total$이름
total <- total[,2:7]
row.names(total)<- total$이름
total <- total[,2:7]
row.names(total)<- total$이름
total <- total[2:7]
row.names(total)<- total$이름
total
total
total <- read.table("data/학생별전체성적_new.txt",header=T,sep=",")
total
row.names(total)<- total$이름
total <- total[2:7]
row.names(total)<- total$이름
total <- total[2:7]
total
total <- read.table("data/학생별전체성적_new.txt",header=T,sep=",")
total
row.names(total)<- total$이름
total <- total[2:7]
row.names(total)<- total$이름
total <- total[2:7]
total
row.names(total)<- total$이름
total <- total[,2:7]
total <- read.table("data/학생별전체성적_new.txt",header=T,sep=",")
total
row.names(total)<- total$이름
total <- total[,2:7]
total
total <- read.table("data/학생별전체성적_new.txt",header=T,sep=",")
total
row.names(total)<- total$이름
total
row.names(total)<- total$이름
total <- total[, 2:7]
total
stars(total,flip.labels=FALSE,draw.segment=FALSE,frame.plot=TRUE,full=TRUE,
main="학생별 과목별 성적분석-STAR Chart" )
lab <- names(total)
value <- table(lab)
value
names(total)
pie(value,labels=lab,radius=0.1,cex=0.6,col=NA)
stars(total,flip.labels=FALSE,draw.segment=TRUE,frame.plot=TRUE,full=TRUE,
main="학생별 과목별 성적분석-나이팅게일 챠트" )
stars(total,flip.labels=FALSE,draw.segment=FALSE,frame.plot=TRUE,full=TRUE,
main="학생별 과목별 성적분석-STAR Chart" )
pie(value,labels=lab,radius=0.1,cex=0.6,col=NA)
stars(total,flip.labels=FALSE,draw.segment=TRUE,frame.plot=TRUE,full=TRUE,
main="학생별 과목별 성적분석-나이팅게일 챠트" )
label <- names(total)
value <- table(label)
color <- c("black","red","green","blue","cyan","violet")
pie(value,labels=label,col=color,radius=0.1,cex=0.6)
#반원 차트
stars(total,flip.labels=FALSE,draw.segment=TRUE,frame.plot=TRUE,full=FALSE,
main="학생별 과목별 분석 다이어그램-반원챠트" )
#radarchart() 함수
install.packages("fmsb")
library(fmsb)
layout <- data.frame(
분석력=c(5,1),
창의력=c(15,3),
판단력=c(3,0),
리더쉽=c(5,1),
사교성=c(5,1))
set.seed(123)
data1 <- data.frame(
분석력=runif(3,1,5),
창의력=rnorm(3,10,2),
판단력=c(0.5,NA,3),
리더쉽=runif(3,1,5),
사교성=c(5,2.5,4))
data2 <- rbind(layout,data1)
op <- par(mar=c(1,0.5,3,1),mfrow=c(2,2))
radarchart(data2,axistype=1,seg=5,plty=1,title="첫번째 타입")
radarchart(data2,axistype=2,pcol=topo.colors(3),plty=1,title="두번째 타입")
radarchart(data2,axistype=3,pty=32,plty=1,axislabcol="grey",na.itp=FALSE,
title="세번째 타입)")
radarchart(data2,axistype=0,plwd=1:5,pcol=1,title="네번째 타입")
par(mar=c(0,0,0,0),mfrow=c(1,1))
pie(value,labels=label,col=color,radius=0.1,cex=0.6)  #범례 표시
# 저수준 적도 함수
var1 <- 1:5
plot(var1)
segments(2,2,3,3)
arrows(5,5,7,7)
arrows(5,5,3,3)
arrows(5,5,4,4) #
twxt(1,4,'labels')
text(1,4,'labels')
text(2,4,'labels')
# 저수준 적도 함수
var1 <- 1:5
plot(var1)
segments(2,2,3,3) #점 (2,2)와 (3,3)을 지나는 선분 그리기
arrows(5,5,4,4) #점 (5,5)와 (4,4)을 지나는 화살표 그리기
text(2,4,'labels')  #
text(2,4,"테스트",srt=45)
title("This IS TEST","SUB")
plot(1:15)
abline(h=8)  # 선 긋기
rect(1,6,3,8)  # 사각형 그리기
arrows(1,1,5,5) # 화살표 그리기
text(8,9,"TEXT")  # 글자 쓰기
title("THIS IS TEST","SUB")
par(mar=c(2,2,2,2),mfrow=c(1,1))
plot(1:15)
abline(h=8)  # 선 긋기
rect(1,6,3,8)  # 사각형 그리기
arrows(1,1,5,5) # 화살표 그리기
text(8,9,"TEXT")  # 글자 쓰기
title("THIS IS TEST","SUB")
iris
iris
View(iris)
x <- iris.Sepal.Length
plot(x = sample$Sepal.Length,
y = sample$Petal.Width)
plot(formula = Petal.Width ~ Sepal.Length,
data = sample)
plot(x = sample$Sepal.Length,
y = sample$Petal.Width)
plot(x = Sepal.Length,
y = Petal.Width)
plot(x = Sepal.Length,
y = Sepal.Width)
plot(x = c('Sepal.Length',
y = 'Sepal.Width'))
iris
plot(x = c('Sepal.Length',
y = 'Sepal.Width'))
plot(var1)
plot(iris)
plot(iris)
plot(Sepal.Length, Petal.Length,
main="Flower Characteristics in Iris",
xlab="Sepal Length",
ylab="Petal Length",
pch=16, cex=1,
col=Species)
plot(Sepal.Length, Petal.Length,
main="Flower Characteristics in Iris",
xlab="Sepal Length",
ylab="Petal Length",
pch=16, cex=1,
col=Species)
plot(Sepal.Length, Petal.Length,
main="Flower Characteristics in Iris",
xlab="Sepal Length",
ylab="Petal Length",
pch=16, cex=1,
col=Species)
plot(iris(Sepal.Length), Petal.Length,
main="Flower Characteristics in Iris",
xlab="Sepal Length",
ylab="Petal Length",
pch=16, cex=1,
col=Species)
x <- iris
plot(Sepal.Length, Petal.Length,
main="Flower Characteristics in Iris",
xlab="Sepal Length",
ylab="Petal Length",
pch=16, cex=1,
col=Species)
x <- iris(Sepal.Length)
x <- iris.Sepal.Length
x <- iris
plot(Sepal.Length, Petal.Length,
main="Flower Characteristics in Iris",
xlab="Sepal Length",
ylab="Petal Length",
pch=16, cex=1,
col=Species)
plot(x <- Sepal.Length, y <- Petal.Length,
main="Flower Characteristics in Iris",
xlab="Sepal Length",
ylab="Petal Length",
pch=16, cex=1,)
plot(x <- Sepal.Length, y <- Petal.Length)
plot(x)
plot(x)
x <- iris(Sepal.Length)
boxplot(x)
plot(iris)
boxplot(iris)
boxplot(iris$Sepal.Length)
boxplot(iris$Petal.Length)
boxplot(iris$Petal.Width)
boxplot(Species, iris$Sepal.Length)
boxplot(iris&Species, iris$Sepal.Length)
boxplot(iris$Species, iris$Sepal.Length)
boxplot(iris$Species = "setosa", iris$Sepal.Length)
boxplot(iris$Species = "setosa", iris$Sepal.Length)
boxplot(iris$Species = 'setosa', iris$Sepal.Length)
boxplot(iris$Species == 'setosa', iris$Sepal.Length)
boxplot(iris$Species == 'setosa', iris$Sepal.Length)
boxplot(iris$Species == 'setosa', iris$Species == '	versicolor', iris$Species == 'virginica', iris$Sepal.Length)
boxplot(iris$Species == 'setosa', iris$Sepal.Length)
boxplot(iris$Species == 'setosa', iris$Sepal.Width)
boxplot(iris$Species == 'setosa', iris$Petal.Length)
boxplot(iris$Species == 'setosa', iris$Petal.Width)
boxplot(iris$Species == 'setosa', iris$Sepal.Length)
boxplot(iris$Species == 'setosa', iris$Sepal.Width)
boxplot(iris$Species == 'setosa', iris$Petal.Length)
boxplot(iris$Species == 'setosa', iris$Petal.Width)
boxplot(iris$Species == 'versicolor', iris$Sepal.Length)
boxplot(iris$Species == 'versicolor', iris$Sepal.Width)
boxplot(iris$Species == 'versicolor', iris$Petal.Length)
boxplot(iris$Species == 'versicolor', iris$Petal.Width)
boxplot(iris$Species == 'virginica', iris$Sepal.Length)
boxplot(iris$Species == 'virginica', iris$Sepal.Width)
boxplot(iris$Species == 'virginica', iris$Petal.Length)
boxplot(iris$Species == 'virginica', iris$Petal.Width)
boxplot(iris$Species == 'setosa', iris$Sepal.Length)
boxplot(iris$Species == 'setosa', iris$Sepal.Width)
boxplot(iris$Species == 'setosa', iris$Petal.Length)
boxplot(iris$Species == 'setosa', iris$Petal.Width)
boxplot(iris$Species == 'versicolor', iris$Sepal.Length)
boxplot(iris$Species == 'versicolor', iris$Sepal.Width)
boxplot(iris$Species == 'versicolor', iris$Petal.Length)
boxplot(iris$Species == 'versicolor', iris$Petal.Width)
boxplot(iris$Species == 'virginica', iris$Sepal.Length)
boxplot(iris$Species == 'virginica', iris$Sepal.Width)
boxplot(iris$Species == 'virginica', iris$Petal.Length)
boxplot(iris$Species == 'virginica', iris$Petal.Width)
par(mrow(12))
par(mforw=c(12))
par(mforw=c(12,1))
boxplot(iris$Species == 'setosa', avg=iris$Sepal.Length)
boxplot(iris$Species == 'setosa', mean(iris$Sepal.Length))
boxplot(iris$Species == 'virginica', iris$Petal.Width)
x <- iris$Sepal.Length
boxplot(iris$Species == 'setosa', mean(iris$Sepal.Length))
y <- iris$Species
boxplot(iris$Species == 'setosa', mean(iris$Sepal.Length))
boxplot(x,y)
barplot(x,y)
barplot(x,y)
x <- mean(iris$Sepal.Length)
y <- iris$Species
barplot(x,y)
barplot(t(qty),main="Fruit's Sales QTY",ylim=c(0,900), #Transpose = t() 전치 행렬
col=rainbow(length(qty)),space=0.1,cex.axis=0.8,las=1,
names.arg = c("MON","TUE","WED","THU","FRI"), cex=0.8)
boxplot(iris$Species == 'virginica', iris$Petal.Width)
boxplot(iris$Species == 'virginica', iris$Petal.Length)
y <- iris$Species
boxplot(iris$Species == 'setosa', mean(iris$Sepal.Length))
boxplot(iris$Species == 'setosa', iris$Sepal.Width)
boxplot(iris$Species == 'setosa', iris$Petal.Length)
boxplot(iris$Species == 'setosa', mean(iris$Sepal.Length))
boxplot(iris$Sepal.Length, iris$Sepal.Width, iris$Petal.Length, iris$Petal.Width)
boxplot(iris$Sepal.Length, iris$Sepal.Width, iris$Petal.Length, iris$Petal.Width)
boxplot(iris$Species == 'virginica'$iris$Sepal.Length, iris$Sepal.Width, iris$Petal.Length, iris$Petal.Width)
boxplot(iris$Species == 'virginica'||iris$Sepal.Length, iris$Sepal.Width, iris$Petal.Length, iris$Petal.Width)
boxplot(iris$Species == 'virginica'&&iris$Sepal.Length, iris$Sepal.Width, iris$Petal.Length, iris$Petal.Width)
